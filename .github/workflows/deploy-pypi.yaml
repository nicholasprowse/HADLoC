name: Deploy to PyPi
run-name: Deploy to PyPi
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    branches:
      - '*'
jobs:
  Build-Package:
    runs-on: ubuntu-latest
    steps:
      - name: Run Event
        run: echo ${{ github.event_name }}
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Python Dependencies
        run: |
          pip install --upgrade pip
          pip install wheel
          pip install twine
          pip install setuptools
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Build Package
        run: python3 setup.py sdist bdist_wheel
      - name: Store build artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: |
            build
            dist
            hadloc.egg-info
      - name: Check version
        run: |
          code_version=$(grep ^Version: hadloc.egg-info/PKG-INFO | cut -f 2 -d ' ')
          version_list=$(pip install hadloc== 2>&1 | grep 'from versions:' | cut -d : -f 3 | tr -d " )")
          
          while [ -n "$version_list" ]
          do
            version=$(echo "$version_list" | cut -d , -f 1)
            if [[ $code_version = "$version" ]]
            then
              echo "Version $code_version already exists in PyPi repo, please update the version number"
              exit 1
            fi
          
            if [[ $version_list = "$version" ]]
            then
              version_list=""
            else
              version_list=$(echo "$version_list" | cut -d , -f 2-)
            fi
          done
          
          echo "Version $code_version is valid"

  Deploy-Package:
    runs-on: ubuntu-latest
    needs: Build-Package
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: package
      - run: ls
      - name: Deploy Package
        run: twine upload dist/* -u __token__ -p ${{ secrets.PYPI_API_KEY }}